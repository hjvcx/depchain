#!/usr/bin/python3
'''
Usage:
    depchain.py [options] [<package>]

Options:
    -h, --help          Open this message.
    -v, --version       Version check and finish program execution.
'''

from docopt import docopt
import sys
import subprocess
import networkx as nx
import matplotlib.pyplot as plt

already_shown = list()
G = nx.DiGraph()
nodes = list()

def get_package_dependencies(package_name):
    if package_name not in already_shown:
        already_shown.append(package_name)
    else:
        return

    print(package_name)
    if package_name not in nodes:
        nodes.append(package_name)
        G.add_node(package_name)

    command = ["apt-cache", "depends", package_name]
    env = {"LANG": "en_US.UTF-8"}
    try:
        lines = subprocess.check_output(command, env=env).decode("utf-8").splitlines()

        depends_lines = list()
        for line in lines:
            if '  Depends:' in line or ' |Depends:' in line:
                dline = line[11:]
                if dline[0] == '<':
                    dline = dline[1:-1]
                depends_lines.append(dline)
                if dline not in nodes:
                    nodes.append(dline)
                    G.add_node(dline)

        for line in depends_lines:
            G.add_edge(package_name, line)

        if depends_lines:
            print(depends_lines)
        print()

        if depends_lines:
            for line in depends_lines:
                get_package_dependencies(line)

    except subprocess.CalledProcessError:
        print('Something went wrong...', file=sys.stderr)

def arg_parse():
    global args
    args = docopt(__doc__)

    if args['--version']:
        print('depchain v1.0.0')
        sys.exit()

def main():
    arg_parse()

    get_package_dependencies(args['<package>'])

    pos = nx.spring_layout(G, k=1.5)
    nx.draw(G, pos, with_labels=True, node_color='lightblue', edge_color='gray', node_size=5000)
    plt.show()

main()